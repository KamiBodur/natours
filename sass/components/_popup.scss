.popup {
    height: 100vh;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    background-color: rgba($color-black, 0.95);
    z-index: 3000;

    // hidden state
    opacity: 0;
    visibility: hidden;

    transition: all .3s;

    &__content {
        @include absCenter;
        background-color: $color-white;
        width: 75%;
        box-shadow: 0 2rem 4rem rgba($color-black, .2);
        border-radius: 3px;
        display: table;
        overflow: hidden;

        opacity: 0;
        // here we need to overright the mixin where there is transform property located, as we must not have to transform property in one selector
        transform: translate(-50%, -50%) scale(0.25);
        transition: all .5s .2s;
    }

    &__left {
        width: 33.333333%;
        display: table-cell;
        vertical-align: top;

        @include respond(tab-land) {
            width: 0%;
        }
    }

    &__right {
        width: 66.666667%;
        display: table-cell;
        vertical-align: middle;
        padding: 3rem 5rem;

        @include respond(tab-land) {
            width: 100%;
        }
    }

    &__img {
        display: block;
        width: 100%;
    }

    &__text {
        font-size: 1.4rem;
        margin-bottom: 4rem;

        column-count: 2;
        column-gap: 4rem;
        column-rule: 1px solid $color-grey-light-2;
    }
// OPEN STATE FOR POPUP

    &:target {
        opacity: 1;
        visibility: visible;
    }

    // popup element becomes a target and then we style the child element which is called popup__content
    &:target &__content {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }

    &__close {

        &:link,
        &:visited {
            color: $color-grey-dark;
            position: absolute;
            font-size: 3rem;
            top: 2.5rem;
            right: 2.5rem;
            text-decoration: none;
            display: inline-block;
            line-height: 1;
        }

        &:hover {
            color: $color-primary;
        }
    }
}