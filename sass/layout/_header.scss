.header {
    height: 95vh;
    background-image: linear-gradient(
        to right bottom,
        /* you cannot add #HEX to RGBa in regular CSS but in SCSS you can */
        rgba($color-primary-light, 0.8),
        rgba($color-primary-dark, 0.8)),
        url(../img/hero-small.jpg);
    background-size: cover;
    background-position: top;
    /* .logo-box is positioned absolutely in relation to his first ancestor with declared position - .header with postion: relative; */
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

    // comma in this case below is like "or"
    // media queries always in EMs
    @media (min-resolution: 192dpi) and (min-width: 37.5em), (min-width: 125em) {
        background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.8),
        rgba($color-primary-dark, 0.8)),
        url(../img/hero.jpg);
    }

    @include respond(phone) {
        clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    }

    // & - ampersand czyli Et

    &__logo-box {
        /* check postion of .header and see comment */
        position: absolute;
        top: 4rem;
        left: 4rem;
    }

    &__logo {
        /* width is automatically figured out - preferance to control the height of an element */
        height: 3.5rem;
    }
    
    &__text-box {
        position: absolute;
        /* top and left specify the distance from the top and left side of the ancestor(parent) and the left corner of a .text-box div is in a center of the browser window (you can add bacgorund-color to see it clearly) */
        /* top: 40% cause it looks better vertically */
        top: 40%;
        left: 50%;
        /* it is postioned in relation to itself */
        transform: translate(-50%, -50%);
        /* this will center the button .btn beacause it is an ilnine-block elemenet whchis is treated like a text */
        text-align: center;
    }


}