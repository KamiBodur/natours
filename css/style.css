@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  /* at this stage we create little bump/jump */
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    /* it will make heading look like before animation */
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  /* at this stage we create little bump/jump */
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    /* it will make heading look like before animation */
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(10rem); }
  100% {
    opacity: 1;
    /* it will make heading look like before animation */
    transform: translateY(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* have a look at the body */
  box-sizing: inherit; }

html {
  /* everywhere I changed pixels to rems  */
  /* font-size is in% as to user browser could easily change the font size within his browser (not in pxs!) - 16px = 100% */
  /* 10px/16px = 0.625 => 62.5% */
  font-size: 62.5%; }

body {
  /* better practice to put borderd box value here than in *selector and then give the box-sizing: inherit; to the *selector */
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #eee;
  text-transform: uppercase;
  /* in case the animation is shaking at the end - but it was not happening in my browser */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1.5s;
    animation-timing-function: ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation-name: moveInRight;
    animation-duration: 1.5s;
    animation-timing-function: ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  font-weight: 700;
  text-transform: uppercase;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: .2rem;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(12deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.row::after {
  content: "";
  display: table;
  clear: both; }

.btn:link, .btn:visited {
  font-size: 1.6rem;
  display: inline-block;
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  border-radius: 10rem;
  transition: all .2s;
  position: relative; }

.btn:hover {
  /* Y axis moves from the top to bottom so we need negative value */
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  /* this ::after will work only when we hovered over the button */ }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active {
  /* it is in relation to initail link state */
  transform: translateY(-0.1rem);
  /* values of the Y axis and blur are twice smaller then on :hever - from experience it works good */
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #eee;
  color: #777; }
  .btn--white::after {
    background-color: #eee; }

.btn::after {
  /* ::after will work only when you add content prop. and we want it to behave like our button so it has to have display prop. of inline-block */
  /* .btn::after is treated like a child of the .btn */
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  /* to put it behind actual button use absolute positioning and add reference to closest ancestor and add z-index */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn--animated {
  animation: moveInBottom .5s ease-out .75s;
  /* applies the 0% animation before it stars - The element will get the style values that is set by the first keyframe (depends on animation-direction), and retain this during the animation-delay period  */
  animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all .2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #eee;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all .2s;
    outline-offset: 2rem; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      outline: 1.5rem solid #55c57a;
      transform: scale(1.05) translateY(0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.9); }

.feature-box {
  background-color: rgba(238, 238, 238, 0.8);
  font-size: 1.5rem;
  font-weight: 700;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform .2s; }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    display: inline-block;
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    -webkit-background-clip: text;
    color: transparent; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
    .row:not(:last-child)::after {
      content: "";
      display: table;
      clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem)/ 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem)/ 3); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem)/ 4); }
  .row .col-2-of-3 {
    width: calc(2* ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3* ((100% - 3 * 6rem)/ 4) + 2 * 6rem); }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.808), rgba(40, 180, 133, 0.808)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  /* .logo-box is positioned absolutely in relation to his first ancestor with declared position - .header with postion: relative; */
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    /* check postion of .header and see comment */
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    /* width is automatically figured out - preferance to control the height of an element */
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    /* top and left specify the distance from the top and left side of the ancestor(parent) and the left corner of a .text-box div is in a center of the browser window (you can add bacgorund-color to see it clearly) */
    /* top: 40% cause it looks better vertically */
    top: 40%;
    left: 50%;
    /* it is postioned in relation to itself */
    transform: translate(-50%, -50%);
    /* this will center the button .btn beacause it is an ilnine-block elemenet whchis is treated like a text */
    text-align: center; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.808), rgba(40, 180, 133, 0.808)), url(../img/nat-4.jpg);
  background-size: cover;
  margin-top: -11.25rem;
  transform: skewY(-7deg); }
  .section-features > * {
    transform: skewY(7deg); }
